public class test_105 {
    public static class Cell{
        public int row;
        public int col;

        public Cell(int row, int col){
            this.row = row;
            this.col = col;
        }

        @Override
        public String toString() {
            return "{" + "col=" + col + ", row=" + row + '}';
        }
    }

    public static void main(String[] args) {
        String line = "1 5";
        Cell cell = parseMove(line);
        System.out.println(cell);
    }

    public static Cell parseMove(String line) {
        // убираем все пробелы в строке
        String trimmedLine = line.replaceAll(" +", "");
        // если осталось не 2 символа, то возвращаем null
        if (trimmedLine.length() != 2) {
            return null;
        }

        // если остались не числа, то возвращаем null
        if (!trimmedLine.matches("\\d+")) {
            return null;
        }

        // если первое число не удовлетворяет требованиям, то возвращаем null
        String rowNumber = trimmedLine.substring(0, 1);
        int row = Integer.parseInt(rowNumber);
        if (row < 1 || row > 3) {
            return null;
        }

        // если второе число не удовлетворяет требованиям, то возвращаем null
        String colNumber = trimmedLine.substring(1, 2);
        int col = Integer.parseInt(colNumber);;
        if (col < 1 || col > 3) {
            return null;
        }

        return new Cell(row, col);
    }
}

// Мы пишем реальную программу, а настоящие пользователи могут вводить любые данные. Наша программа должна адекватно реагировать на любой ввод.
//
//Будем считать правильным вводом, если на одной строке ввели два числа (столбец и строку) от 1 до 3. Пробелов может быть сколько угодно.
//
//Поэтому напишем функцию, которая принимает строку и возвращает клетку Cell в случае, если строка содержит только пробелы и два числа от 1 до 3. Иначе функция должна вернуть null.
//
//Классы
//Имя класса: Cell, поля: int row, int col.
//
//Сигнатура функции
//Название функции: parseMove.
//
//Параметры: String line.
//
//Возвращаемый тип: Cell.
//
//Примеры
//Пример 1
//
//Входные данные
//line = "1 3";
//Выходные данные
//result = {
//  "col" : 3,
//  "row" : 1
//};
//Пример 2
//
//Входные данные
//line = "1 5";
//Выходные данные
//result = null;

